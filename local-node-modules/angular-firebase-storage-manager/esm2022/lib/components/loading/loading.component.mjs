import { ChangeDetectionStrategy, Component, input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/platform-browser";
export class LoadingComponent {
    constructor(sanitizer) {
        this.sanitizer = sanitizer;
        /**
         * Configures the height of the loading SVG (in pixels). Defaults to 250px.
         */
        this.height = input(250);
        /**
         * A dynamic SVG string representing the loading animation.
         * This string is generated using the provided height.
         * @private
         */
        this.LOADING_SVG = (height) => `<?xml version="1.0" encoding="utf-8"?><svg width='${height}px' height='${height}px' xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100" preserveAspectRatio="xMidYMid" class="uil-ring"><rect x="0" y="0" width="100" height="100" fill="none" class="bk"></rect><defs><filter id="uil-ring-shadow" x="-100%" y="-100%" width="300%" height="300%"><feOffset result="offOut" in="SourceGraphic" dx="0" dy="0"></feOffset><feGaussianBlur result="blurOut" in="offOut" stdDeviation="0"></feGaussianBlur><feBlend in="SourceGraphic" in2="blurOut" mode="normal"></feBlend></filter></defs><path d="M10,50c0,0,0,0.5,0.1,1.4c0,0.5,0.1,1,0.2,1.7c0,0.3,0.1,0.7,0.1,1.1c0.1,0.4,0.1,0.8,0.2,1.2c0.2,0.8,0.3,1.8,0.5,2.8 c0.3,1,0.6,2.1,0.9,3.2c0.3,1.1,0.9,2.3,1.4,3.5c0.5,1.2,1.2,2.4,1.8,3.7c0.3,0.6,0.8,1.2,1.2,1.9c0.4,0.6,0.8,1.3,1.3,1.9 c1,1.2,1.9,2.6,3.1,3.7c2.2,2.5,5,4.7,7.9,6.7c3,2,6.5,3.4,10.1,4.6c3.6,1.1,7.5,1.5,11.2,1.6c4-0.1,7.7-0.6,11.3-1.6 c3.6-1.2,7-2.6,10-4.6c3-2,5.8-4.2,7.9-6.7c1.2-1.2,2.1-2.5,3.1-3.7c0.5-0.6,0.9-1.3,1.3-1.9c0.4-0.6,0.8-1.3,1.2-1.9 c0.6-1.3,1.3-2.5,1.8-3.7c0.5-1.2,1-2.4,1.4-3.5c0.3-1.1,0.6-2.2,0.9-3.2c0.2-1,0.4-1.9,0.5-2.8c0.1-0.4,0.1-0.8,0.2-1.2 c0-0.4,0.1-0.7,0.1-1.1c0.1-0.7,0.1-1.2,0.2-1.7C90,50.5,90,50,90,50s0,0.5,0,1.4c0,0.5,0,1,0,1.7c0,0.3,0,0.7,0,1.1 c0,0.4-0.1,0.8-0.1,1.2c-0.1,0.9-0.2,1.8-0.4,2.8c-0.2,1-0.5,2.1-0.7,3.3c-0.3,1.2-0.8,2.4-1.2,3.7c-0.2,0.7-0.5,1.3-0.8,1.9 c-0.3,0.7-0.6,1.3-0.9,2c-0.3,0.7-0.7,1.3-1.1,2c-0.4,0.7-0.7,1.4-1.2,2c-1,1.3-1.9,2.7-3.1,4c-2.2,2.7-5,5-8.1,7.1 c-0.8,0.5-1.6,1-2.4,1.5c-0.8,0.5-1.7,0.9-2.6,1.3L66,87.7l-1.4,0.5c-0.9,0.3-1.8,0.7-2.8,1c-3.8,1.1-7.9,1.7-11.8,1.8L47,90.8 c-1,0-2-0.2-3-0.3l-1.5-0.2l-0.7-0.1L41.1,90c-1-0.3-1.9-0.5-2.9-0.7c-0.9-0.3-1.9-0.7-2.8-1L34,87.7l-1.3-0.6 c-0.9-0.4-1.8-0.8-2.6-1.3c-0.8-0.5-1.6-1-2.4-1.5c-3.1-2.1-5.9-4.5-8.1-7.1c-1.2-1.2-2.1-2.7-3.1-4c-0.5-0.6-0.8-1.4-1.2-2 c-0.4-0.7-0.8-1.3-1.1-2c-0.3-0.7-0.6-1.3-0.9-2c-0.3-0.7-0.6-1.3-0.8-1.9c-0.4-1.3-0.9-2.5-1.2-3.7c-0.3-1.2-0.5-2.3-0.7-3.3 c-0.2-1-0.3-2-0.4-2.8c-0.1-0.4-0.1-0.8-0.1-1.2c0-0.4,0-0.7,0-1.1c0-0.7,0-1.2,0-1.7C10,50.5,10,50,10,50z" fill="#337ab7" filter="url(#uil-ring-shadow)"><animateTransform attributeName="transform" type="rotate" from="0 50 50" to="360 50 50" repeatCount="indefinite" dur="1s"></animateTransform></path></svg>`;
    }
    ngOnInit() {
        /**
         * Generating a SafeHtml version of the loading SVG using the provided
         * height.
         */
        if (this.height()) {
            this.svg = this.sanitizer
                .bypassSecurityTrustHtml(this.LOADING_SVG(this.height()));
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.1.3", ngImport: i0, type: LoadingComponent, deps: [{ token: i1.DomSanitizer }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.1.0", version: "18.1.3", type: LoadingComponent, isStandalone: true, selector: "anon-loading", inputs: { height: { classPropertyName: "height", publicName: "height", isSignal: true, isRequired: false, transformFunction: null } }, ngImport: i0, template: "<div class=\"loading\">\n    <!-- eslint-disable-next-line @angular-eslint/template/no-inline-styles -->\n    <div [style.height]=\"height()+'px'\" [innerHTML]=\"svg\"></div>\n</div>\n", styles: [".loading{display:flex;align-items:center;justify-content:center}\n"], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.1.3", ngImport: i0, type: LoadingComponent, decorators: [{
            type: Component,
            args: [{ selector: 'anon-loading', standalone: true, changeDetection: ChangeDetectionStrategy.OnPush, template: "<div class=\"loading\">\n    <!-- eslint-disable-next-line @angular-eslint/template/no-inline-styles -->\n    <div [style.height]=\"height()+'px'\" [innerHTML]=\"svg\"></div>\n</div>\n", styles: [".loading{display:flex;align-items:center;justify-content:center}\n"] }]
        }], ctorParameters: () => [{ type: i1.DomSanitizer }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9hZGluZy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9hbmd1bGFyLWZpcmViYXNlLXN0b3JhZ2UtbWFuYWdlci9zcmMvbGliL2NvbXBvbmVudHMvbG9hZGluZy9sb2FkaW5nLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2FuZ3VsYXItZmlyZWJhc2Utc3RvcmFnZS1tYW5hZ2VyL3NyYy9saWIvY29tcG9uZW50cy9sb2FkaW5nL2xvYWRpbmcuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQVMsTUFBTSxlQUFlLENBQUM7OztBQVloRixNQUFNLE9BQU8sZ0JBQWdCO0lBbUIzQixZQUFvQixTQUF1QjtRQUF2QixjQUFTLEdBQVQsU0FBUyxDQUFjO1FBbEIzQzs7V0FFRztRQUNILFdBQU0sR0FBRyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7UUFFcEI7Ozs7V0FJRztRQUVILGdCQUFXLEdBQUcsQ0FBQyxNQUFjLEVBQUUsRUFBRSxDQUFDLHFEQUFxRCxNQUFNLGVBQWUsTUFBTSxncUVBQWdxRSxDQUFDO0lBT3J1RSxDQUFDO0lBRS9DLFFBQVE7UUFDTjs7O1dBR0c7UUFDSCxJQUFJLElBQUksQ0FBQyxNQUFNLEVBQUUsRUFBRSxDQUFDO1lBQ2xCLElBQUksQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDLFNBQVM7aUJBQ3BCLHVCQUF1QixDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUMsQ0FBQztRQUNoRSxDQUFDO0lBQ0gsQ0FBQzs4R0E5QlUsZ0JBQWdCO2tHQUFoQixnQkFBZ0IsK01DWjdCLDBMQUlBOzsyRkRRYSxnQkFBZ0I7a0JBVDVCLFNBQVM7K0JBQ0UsY0FBYyxjQUtaLElBQUksbUJBQ0MsdUJBQXVCLENBQUMsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgaW5wdXQsIE9uSW5pdH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0RvbVNhbml0aXplciwgU2FmZUh0bWx9IGZyb20gJ0Bhbmd1bGFyL3BsYXRmb3JtLWJyb3dzZXInO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhbm9uLWxvYWRpbmcnLFxuICB0ZW1wbGF0ZVVybDogJy4vbG9hZGluZy5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlczogYFxuICAgICAgLmxvYWRpbmcge2Rpc3BsYXk6IGZsZXg7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IGp1c3RpZnktY29udGVudDogY2VudGVyOyB9XG4gIGAsXG4gIHN0YW5kYWxvbmU6IHRydWUsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxufSlcbmV4cG9ydCBjbGFzcyBMb2FkaW5nQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgLyoqXG4gICAqIENvbmZpZ3VyZXMgdGhlIGhlaWdodCBvZiB0aGUgbG9hZGluZyBTVkcgKGluIHBpeGVscykuIERlZmF1bHRzIHRvIDI1MHB4LlxuICAgKi9cbiAgaGVpZ2h0ID0gaW5wdXQoMjUwKTtcblxuICAvKipcbiAgICogQSBkeW5hbWljIFNWRyBzdHJpbmcgcmVwcmVzZW50aW5nIHRoZSBsb2FkaW5nIGFuaW1hdGlvbi5cbiAgICogVGhpcyBzdHJpbmcgaXMgZ2VuZXJhdGVkIHVzaW5nIHRoZSBwcm92aWRlZCBoZWlnaHQuXG4gICAqIEBwcml2YXRlXG4gICAqL1xuXG4gIExPQURJTkdfU1ZHID0gKGhlaWdodDogbnVtYmVyKSA9PiBgPD94bWwgdmVyc2lvbj1cIjEuMFwiIGVuY29kaW5nPVwidXRmLThcIj8+PHN2ZyB3aWR0aD0nJHtoZWlnaHR9cHgnIGhlaWdodD0nJHtoZWlnaHR9cHgnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB2aWV3Qm94PVwiMCAwIDEwMCAxMDBcIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPVwieE1pZFlNaWRcIiBjbGFzcz1cInVpbC1yaW5nXCI+PHJlY3QgeD1cIjBcIiB5PVwiMFwiIHdpZHRoPVwiMTAwXCIgaGVpZ2h0PVwiMTAwXCIgZmlsbD1cIm5vbmVcIiBjbGFzcz1cImJrXCI+PC9yZWN0PjxkZWZzPjxmaWx0ZXIgaWQ9XCJ1aWwtcmluZy1zaGFkb3dcIiB4PVwiLTEwMCVcIiB5PVwiLTEwMCVcIiB3aWR0aD1cIjMwMCVcIiBoZWlnaHQ9XCIzMDAlXCI+PGZlT2Zmc2V0IHJlc3VsdD1cIm9mZk91dFwiIGluPVwiU291cmNlR3JhcGhpY1wiIGR4PVwiMFwiIGR5PVwiMFwiPjwvZmVPZmZzZXQ+PGZlR2F1c3NpYW5CbHVyIHJlc3VsdD1cImJsdXJPdXRcIiBpbj1cIm9mZk91dFwiIHN0ZERldmlhdGlvbj1cIjBcIj48L2ZlR2F1c3NpYW5CbHVyPjxmZUJsZW5kIGluPVwiU291cmNlR3JhcGhpY1wiIGluMj1cImJsdXJPdXRcIiBtb2RlPVwibm9ybWFsXCI+PC9mZUJsZW5kPjwvZmlsdGVyPjwvZGVmcz48cGF0aCBkPVwiTTEwLDUwYzAsMCwwLDAuNSwwLjEsMS40YzAsMC41LDAuMSwxLDAuMiwxLjdjMCwwLjMsMC4xLDAuNywwLjEsMS4xYzAuMSwwLjQsMC4xLDAuOCwwLjIsMS4yYzAuMiwwLjgsMC4zLDEuOCwwLjUsMi44IGMwLjMsMSwwLjYsMi4xLDAuOSwzLjJjMC4zLDEuMSwwLjksMi4zLDEuNCwzLjVjMC41LDEuMiwxLjIsMi40LDEuOCwzLjdjMC4zLDAuNiwwLjgsMS4yLDEuMiwxLjljMC40LDAuNiwwLjgsMS4zLDEuMywxLjkgYzEsMS4yLDEuOSwyLjYsMy4xLDMuN2MyLjIsMi41LDUsNC43LDcuOSw2LjdjMywyLDYuNSwzLjQsMTAuMSw0LjZjMy42LDEuMSw3LjUsMS41LDExLjIsMS42YzQtMC4xLDcuNy0wLjYsMTEuMy0xLjYgYzMuNi0xLjIsNy0yLjYsMTAtNC42YzMtMiw1LjgtNC4yLDcuOS02LjdjMS4yLTEuMiwyLjEtMi41LDMuMS0zLjdjMC41LTAuNiwwLjktMS4zLDEuMy0xLjljMC40LTAuNiwwLjgtMS4zLDEuMi0xLjkgYzAuNi0xLjMsMS4zLTIuNSwxLjgtMy43YzAuNS0xLjIsMS0yLjQsMS40LTMuNWMwLjMtMS4xLDAuNi0yLjIsMC45LTMuMmMwLjItMSwwLjQtMS45LDAuNS0yLjhjMC4xLTAuNCwwLjEtMC44LDAuMi0xLjIgYzAtMC40LDAuMS0wLjcsMC4xLTEuMWMwLjEtMC43LDAuMS0xLjIsMC4yLTEuN0M5MCw1MC41LDkwLDUwLDkwLDUwczAsMC41LDAsMS40YzAsMC41LDAsMSwwLDEuN2MwLDAuMywwLDAuNywwLDEuMSBjMCwwLjQtMC4xLDAuOC0wLjEsMS4yYy0wLjEsMC45LTAuMiwxLjgtMC40LDIuOGMtMC4yLDEtMC41LDIuMS0wLjcsMy4zYy0wLjMsMS4yLTAuOCwyLjQtMS4yLDMuN2MtMC4yLDAuNy0wLjUsMS4zLTAuOCwxLjkgYy0wLjMsMC43LTAuNiwxLjMtMC45LDJjLTAuMywwLjctMC43LDEuMy0xLjEsMmMtMC40LDAuNy0wLjcsMS40LTEuMiwyYy0xLDEuMy0xLjksMi43LTMuMSw0Yy0yLjIsMi43LTUsNS04LjEsNy4xIGMtMC44LDAuNS0xLjYsMS0yLjQsMS41Yy0wLjgsMC41LTEuNywwLjktMi42LDEuM0w2Niw4Ny43bC0xLjQsMC41Yy0wLjksMC4zLTEuOCwwLjctMi44LDFjLTMuOCwxLjEtNy45LDEuNy0xMS44LDEuOEw0Nyw5MC44IGMtMSwwLTItMC4yLTMtMC4zbC0xLjUtMC4ybC0wLjctMC4xTDQxLjEsOTBjLTEtMC4zLTEuOS0wLjUtMi45LTAuN2MtMC45LTAuMy0xLjktMC43LTIuOC0xTDM0LDg3LjdsLTEuMy0wLjYgYy0wLjktMC40LTEuOC0wLjgtMi42LTEuM2MtMC44LTAuNS0xLjYtMS0yLjQtMS41Yy0zLjEtMi4xLTUuOS00LjUtOC4xLTcuMWMtMS4yLTEuMi0yLjEtMi43LTMuMS00Yy0wLjUtMC42LTAuOC0xLjQtMS4yLTIgYy0wLjQtMC43LTAuOC0xLjMtMS4xLTJjLTAuMy0wLjctMC42LTEuMy0wLjktMmMtMC4zLTAuNy0wLjYtMS4zLTAuOC0xLjljLTAuNC0xLjMtMC45LTIuNS0xLjItMy43Yy0wLjMtMS4yLTAuNS0yLjMtMC43LTMuMyBjLTAuMi0xLTAuMy0yLTAuNC0yLjhjLTAuMS0wLjQtMC4xLTAuOC0wLjEtMS4yYzAtMC40LDAtMC43LDAtMS4xYzAtMC43LDAtMS4yLDAtMS43QzEwLDUwLjUsMTAsNTAsMTAsNTB6XCIgZmlsbD1cIiMzMzdhYjdcIiBmaWx0ZXI9XCJ1cmwoI3VpbC1yaW5nLXNoYWRvdylcIj48YW5pbWF0ZVRyYW5zZm9ybSBhdHRyaWJ1dGVOYW1lPVwidHJhbnNmb3JtXCIgdHlwZT1cInJvdGF0ZVwiIGZyb209XCIwIDUwIDUwXCIgdG89XCIzNjAgNTAgNTBcIiByZXBlYXRDb3VudD1cImluZGVmaW5pdGVcIiBkdXI9XCIxc1wiPjwvYW5pbWF0ZVRyYW5zZm9ybT48L3BhdGg+PC9zdmc+YDtcblxuICAvKipcbiAgICogSG9sZHMgYSBzYW5pdGl6ZWQgdmVyc2lvbiBvZiB0aGUgZHluYW1pYyBTVkcsIHJlYWR5IGZvciByZW5kZXJpbmcuXG4gICAqL1xuICBzdmc/OiBTYWZlSHRtbDtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHNhbml0aXplcjogRG9tU2FuaXRpemVyKSB7fVxuXG4gIG5nT25Jbml0KCkge1xuICAgIC8qKlxuICAgICAqIEdlbmVyYXRpbmcgYSBTYWZlSHRtbCB2ZXJzaW9uIG9mIHRoZSBsb2FkaW5nIFNWRyB1c2luZyB0aGUgcHJvdmlkZWRcbiAgICAgKiBoZWlnaHQuXG4gICAgICovXG4gICAgaWYgKHRoaXMuaGVpZ2h0KCkpIHtcbiAgICAgIHRoaXMuc3ZnID0gdGhpcy5zYW5pdGl6ZXJcbiAgICAgICAgICAuYnlwYXNzU2VjdXJpdHlUcnVzdEh0bWwodGhpcy5MT0FESU5HX1NWRyh0aGlzLmhlaWdodCgpKSk7XG4gICAgfVxuICB9XG59XG4iLCI8ZGl2IGNsYXNzPVwibG9hZGluZ1wiPlxuICAgIDwhLS0gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEBhbmd1bGFyLWVzbGludC90ZW1wbGF0ZS9uby1pbmxpbmUtc3R5bGVzIC0tPlxuICAgIDxkaXYgW3N0eWxlLmhlaWdodF09XCJoZWlnaHQoKSsncHgnXCIgW2lubmVySFRNTF09XCJzdmdcIj48L2Rpdj5cbjwvZGl2PlxuIl19