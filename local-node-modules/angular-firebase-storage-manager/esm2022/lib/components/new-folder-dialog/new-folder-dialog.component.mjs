import { ChangeDetectionStrategy, Component, Inject } from '@angular/core';
import { MAT_DIALOG_DATA, MatDialogModule, } from '@angular/material/dialog';
import { MatFormFieldModule } from '@angular/material/form-field';
import { MatInputModule } from '@angular/material/input';
import { FormsModule } from '@angular/forms';
import { MatButtonModule } from '@angular/material/button';
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/dialog";
import * as i2 from "@angular/material/form-field";
import * as i3 from "@angular/material/input";
import * as i4 from "@angular/forms";
import * as i5 from "@angular/material/button";
export class NewFolderDialogComponent {
    /**
     * Constructor for the dialog component.
     *
     * @param {NewFolderDialogContract} data - Injected data containing initial
     * folder information.
     * @param {MatDialogRef} dialogRef - A reference to this dialog instance,
     * used for controlling its behavior.
     */
    constructor(data, dialogRef) {
        this.data = data;
        this.dialogRef = dialogRef;
    }
    /**
     * Closes the dialog and passes back the entered folder name.
     */
    createFolder() {
        const newFolderCloseContract = {
            folderName: this.data.folderName,
        };
        this.dialogRef.close(newFolderCloseContract);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.1.3", ngImport: i0, type: NewFolderDialogComponent, deps: [{ token: MAT_DIALOG_DATA }, { token: i1.MatDialogRef }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "18.1.3", type: NewFolderDialogComponent, isStandalone: true, selector: "anon-new-folder-dialog", ngImport: i0, template: "<h1 mat-dialog-title>Create folder</h1>\n\n<mat-dialog-content>\n  <form class=\"new-folder\" (ngSubmit)=\"createFolder()\">\n    <mat-form-field appearance=\"outline\">\n      <mat-label>New folder name</mat-label>\n      <input matInput name=\"folderName\" [(ngModel)]=\"data.folderName\">\n    </mat-form-field>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions align=\"end\">\n  <button mat-button type=\"button\" mat-dialog-close>Cancel</button>\n  <button mat-raised-button\n          color=\"primary\"\n          type=\"submit\"\n          [disabled]=\"!data.folderName\"\n          (click)=\"createFolder()\">Create</button>\n</mat-dialog-actions>\n", styles: ["::ng-deep .mat-dialog-container{border-radius:1rem}mat-dialog-content form.new-folder{margin-top:1rem}\n"], dependencies: [{ kind: "ngmodule", type: MatDialogModule }, { kind: "directive", type: i1.MatDialogClose, selector: "[mat-dialog-close], [matDialogClose]", inputs: ["aria-label", "type", "mat-dialog-close", "matDialogClose"], exportAs: ["matDialogClose"] }, { kind: "directive", type: i1.MatDialogTitle, selector: "[mat-dialog-title], [matDialogTitle]", inputs: ["id"], exportAs: ["matDialogTitle"] }, { kind: "directive", type: i1.MatDialogActions, selector: "[mat-dialog-actions], mat-dialog-actions, [matDialogActions]", inputs: ["align"] }, { kind: "directive", type: i1.MatDialogContent, selector: "[mat-dialog-content], mat-dialog-content, [matDialogContent]" }, { kind: "ngmodule", type: MatFormFieldModule }, { kind: "component", type: i2.MatFormField, selector: "mat-form-field", inputs: ["hideRequiredMarker", "color", "floatLabel", "appearance", "subscriptSizing", "hintLabel"], exportAs: ["matFormField"] }, { kind: "directive", type: i2.MatLabel, selector: "mat-label" }, { kind: "ngmodule", type: MatInputModule }, { kind: "directive", type: i3.MatInput, selector: "input[matInput], textarea[matInput], select[matNativeControl],      input[matNativeControl], textarea[matNativeControl]", inputs: ["disabled", "id", "placeholder", "name", "required", "type", "errorStateMatcher", "aria-describedby", "value", "readonly"], exportAs: ["matInput"] }, { kind: "ngmodule", type: FormsModule }, { kind: "directive", type: i4.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { kind: "directive", type: i4.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i4.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i4.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { kind: "directive", type: i4.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "directive", type: i4.NgForm, selector: "form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]", inputs: ["ngFormOptions"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { kind: "ngmodule", type: MatButtonModule }, { kind: "component", type: i5.MatButton, selector: "    button[mat-button], button[mat-raised-button], button[mat-flat-button],    button[mat-stroked-button]  ", exportAs: ["matButton"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.1.3", ngImport: i0, type: NewFolderDialogComponent, decorators: [{
            type: Component,
            args: [{ selector: 'anon-new-folder-dialog', standalone: true, imports: [
                        MatDialogModule,
                        MatFormFieldModule,
                        MatInputModule,
                        FormsModule,
                        MatButtonModule,
                    ], changeDetection: ChangeDetectionStrategy.OnPush, template: "<h1 mat-dialog-title>Create folder</h1>\n\n<mat-dialog-content>\n  <form class=\"new-folder\" (ngSubmit)=\"createFolder()\">\n    <mat-form-field appearance=\"outline\">\n      <mat-label>New folder name</mat-label>\n      <input matInput name=\"folderName\" [(ngModel)]=\"data.folderName\">\n    </mat-form-field>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions align=\"end\">\n  <button mat-button type=\"button\" mat-dialog-close>Cancel</button>\n  <button mat-raised-button\n          color=\"primary\"\n          type=\"submit\"\n          [disabled]=\"!data.folderName\"\n          (click)=\"createFolder()\">Create</button>\n</mat-dialog-actions>\n", styles: ["::ng-deep .mat-dialog-container{border-radius:1rem}mat-dialog-content form.new-folder{margin-top:1rem}\n"] }]
        }], ctorParameters: () => [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [MAT_DIALOG_DATA]
                }] }, { type: i1.MatDialogRef }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmV3LWZvbGRlci1kaWFsb2cuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvYW5ndWxhci1maXJlYmFzZS1zdG9yYWdlLW1hbmFnZXIvc3JjL2xpYi9jb21wb25lbnRzL25ldy1mb2xkZXItZGlhbG9nL25ldy1mb2xkZXItZGlhbG9nLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2FuZ3VsYXItZmlyZWJhc2Utc3RvcmFnZS1tYW5hZ2VyL3NyYy9saWIvY29tcG9uZW50cy9uZXctZm9sZGVyLWRpYWxvZy9uZXctZm9sZGVyLWRpYWxvZy5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUN6RSxPQUFPLEVBQ0wsZUFBZSxFQUFFLGVBQWUsR0FDakMsTUFBTSwwQkFBMEIsQ0FBQztBQUNsQyxPQUFPLEVBQUMsa0JBQWtCLEVBQUMsTUFBTSw4QkFBOEIsQ0FBQztBQUNoRSxPQUFPLEVBQUMsY0FBYyxFQUFDLE1BQU0seUJBQXlCLENBQUM7QUFDdkQsT0FBTyxFQUFDLFdBQVcsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBQzNDLE9BQU8sRUFBQyxlQUFlLEVBQUMsTUFBTSwwQkFBMEIsQ0FBQzs7Ozs7OztBQWlDekQsTUFBTSxPQUFPLHdCQUF3QjtJQUNuQzs7Ozs7OztPQU9HO0lBQ0gsWUFFUyxJQUE2QixFQUM1QixTQUFpRDtRQURsRCxTQUFJLEdBQUosSUFBSSxDQUF5QjtRQUM1QixjQUFTLEdBQVQsU0FBUyxDQUF3QztJQUN4RCxDQUFDO0lBRUo7O09BRUc7SUFDSCxZQUFZO1FBQ1YsTUFBTSxzQkFBc0IsR0FBaUM7WUFDM0QsVUFBVSxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVTtTQUNqQyxDQUFDO1FBQ0YsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsc0JBQXNCLENBQUMsQ0FBQztJQUMvQyxDQUFDOzhHQXZCVSx3QkFBd0Isa0JBVXpCLGVBQWU7a0dBVmQsd0JBQXdCLGtGQ3hDckMsMHBCQW1CQSxpS0RhSSxlQUFlLCtuQkFDZixrQkFBa0IsMFNBQ2xCLGNBQWMsMFdBQ2QsV0FBVyx1aUNBQ1gsZUFBZTs7MkZBSU4sd0JBQXdCO2tCQWRwQyxTQUFTOytCQUNFLHdCQUF3QixjQUd0QixJQUFJLFdBQ1A7d0JBQ1AsZUFBZTt3QkFDZixrQkFBa0I7d0JBQ2xCLGNBQWM7d0JBQ2QsV0FBVzt3QkFDWCxlQUFlO3FCQUNoQixtQkFDZ0IsdUJBQXVCLENBQUMsTUFBTTs7MEJBWTVDLE1BQU07MkJBQUMsZUFBZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgSW5qZWN0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7XG4gIE1BVF9ESUFMT0dfREFUQSwgTWF0RGlhbG9nTW9kdWxlLCBNYXREaWFsb2dSZWYsXG59IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2RpYWxvZyc7XG5pbXBvcnQge01hdEZvcm1GaWVsZE1vZHVsZX0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvZm9ybS1maWVsZCc7XG5pbXBvcnQge01hdElucHV0TW9kdWxlfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9pbnB1dCc7XG5pbXBvcnQge0Zvcm1zTW9kdWxlfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQge01hdEJ1dHRvbk1vZHVsZX0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvYnV0dG9uJztcblxuLyoqXG4gKiBEZWZpbmVzIHRoZSBkYXRhIGNvbnRyYWN0IGZvciBpbmZvcm1hdGlvbiBwYXNzZWQgdG8gdGhlXG4gKiBOZXdGb2xkZXJEaWFsb2dDb21wb25lbnQuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgTmV3Rm9sZGVyRGlhbG9nQ29udHJhY3Qge1xuICBmb2xkZXJOYW1lOiBzdHJpbmcsXG4gIHBhdGg6IHN0cmluZyxcbn1cblxuLyoqXG4gKiBEZWZpbmVzIHRoZSBkYXRhIGNvbnRyYWN0IGZvciBpbmZvcm1hdGlvbiByZXR1cm5lZCB3aGVuXG4gKiBjbG9zaW5nIHRoZSBOZXdGb2xkZXJEaWFsb2dDb21wb25lbnQuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgTmV3Rm9sZGVyRGlhbG9nQ2xvc2VDb250cmFjdCB7XG4gIGZvbGRlck5hbWU6IHN0cmluZyxcbn1cblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYW5vbi1uZXctZm9sZGVyLWRpYWxvZycsXG4gIHRlbXBsYXRlVXJsOiAnLi9uZXctZm9sZGVyLWRpYWxvZy5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsOiAnLi9uZXctZm9sZGVyLWRpYWxvZy5jb21wb25lbnQuc2NzcycsXG4gIHN0YW5kYWxvbmU6IHRydWUsXG4gIGltcG9ydHM6IFtcbiAgICBNYXREaWFsb2dNb2R1bGUsXG4gICAgTWF0Rm9ybUZpZWxkTW9kdWxlLFxuICAgIE1hdElucHV0TW9kdWxlLFxuICAgIEZvcm1zTW9kdWxlLFxuICAgIE1hdEJ1dHRvbk1vZHVsZSxcbiAgXSxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG59KVxuZXhwb3J0IGNsYXNzIE5ld0ZvbGRlckRpYWxvZ0NvbXBvbmVudCB7XG4gIC8qKlxuICAgKiBDb25zdHJ1Y3RvciBmb3IgdGhlIGRpYWxvZyBjb21wb25lbnQuXG4gICAqXG4gICAqIEBwYXJhbSB7TmV3Rm9sZGVyRGlhbG9nQ29udHJhY3R9IGRhdGEgLSBJbmplY3RlZCBkYXRhIGNvbnRhaW5pbmcgaW5pdGlhbFxuICAgKiBmb2xkZXIgaW5mb3JtYXRpb24uXG4gICAqIEBwYXJhbSB7TWF0RGlhbG9nUmVmfSBkaWFsb2dSZWYgLSBBIHJlZmVyZW5jZSB0byB0aGlzIGRpYWxvZyBpbnN0YW5jZSxcbiAgICogdXNlZCBmb3IgY29udHJvbGxpbmcgaXRzIGJlaGF2aW9yLlxuICAgKi9cbiAgY29uc3RydWN0b3IoXG4gICAgQEluamVjdChNQVRfRElBTE9HX0RBVEEpXG4gICAgcHVibGljIGRhdGE6IE5ld0ZvbGRlckRpYWxvZ0NvbnRyYWN0LFxuICAgIHByaXZhdGUgZGlhbG9nUmVmOiBNYXREaWFsb2dSZWY8TmV3Rm9sZGVyRGlhbG9nQ29tcG9uZW50PixcbiAgKSB7fVxuXG4gIC8qKlxuICAgKiBDbG9zZXMgdGhlIGRpYWxvZyBhbmQgcGFzc2VzIGJhY2sgdGhlIGVudGVyZWQgZm9sZGVyIG5hbWUuXG4gICAqL1xuICBjcmVhdGVGb2xkZXIoKSB7XG4gICAgY29uc3QgbmV3Rm9sZGVyQ2xvc2VDb250cmFjdDogTmV3Rm9sZGVyRGlhbG9nQ2xvc2VDb250cmFjdCA9IHtcbiAgICAgIGZvbGRlck5hbWU6IHRoaXMuZGF0YS5mb2xkZXJOYW1lLFxuICAgIH07XG4gICAgdGhpcy5kaWFsb2dSZWYuY2xvc2UobmV3Rm9sZGVyQ2xvc2VDb250cmFjdCk7XG4gIH1cbn1cbiIsIjxoMSBtYXQtZGlhbG9nLXRpdGxlPkNyZWF0ZSBmb2xkZXI8L2gxPlxuXG48bWF0LWRpYWxvZy1jb250ZW50PlxuICA8Zm9ybSBjbGFzcz1cIm5ldy1mb2xkZXJcIiAobmdTdWJtaXQpPVwiY3JlYXRlRm9sZGVyKClcIj5cbiAgICA8bWF0LWZvcm0tZmllbGQgYXBwZWFyYW5jZT1cIm91dGxpbmVcIj5cbiAgICAgIDxtYXQtbGFiZWw+TmV3IGZvbGRlciBuYW1lPC9tYXQtbGFiZWw+XG4gICAgICA8aW5wdXQgbWF0SW5wdXQgbmFtZT1cImZvbGRlck5hbWVcIiBbKG5nTW9kZWwpXT1cImRhdGEuZm9sZGVyTmFtZVwiPlxuICAgIDwvbWF0LWZvcm0tZmllbGQ+XG4gIDwvZm9ybT5cbjwvbWF0LWRpYWxvZy1jb250ZW50PlxuXG48bWF0LWRpYWxvZy1hY3Rpb25zIGFsaWduPVwiZW5kXCI+XG4gIDxidXR0b24gbWF0LWJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgbWF0LWRpYWxvZy1jbG9zZT5DYW5jZWw8L2J1dHRvbj5cbiAgPGJ1dHRvbiBtYXQtcmFpc2VkLWJ1dHRvblxuICAgICAgICAgIGNvbG9yPVwicHJpbWFyeVwiXG4gICAgICAgICAgdHlwZT1cInN1Ym1pdFwiXG4gICAgICAgICAgW2Rpc2FibGVkXT1cIiFkYXRhLmZvbGRlck5hbWVcIlxuICAgICAgICAgIChjbGljayk9XCJjcmVhdGVGb2xkZXIoKVwiPkNyZWF0ZTwvYnV0dG9uPlxuPC9tYXQtZGlhbG9nLWFjdGlvbnM+XG4iXX0=