// https://v17.material.angular.io/guide/material-3#using-component-color-variants
// https://material.angular.io/guide/theming-your-components
@use 'sass:map';
@use '@angular/material' as mat;

@use './components/storage-file-preview/storage-file-preview-theme' as storageFilePreview;
@use './components/loading-or-error/loading-or-error-theme' as loadingOrError;

@mixin componentThemeMixins($theme) {
  @include storageFilePreview.theme($theme);
  @include loadingOrError.theme($theme);
}

@mixin color($theme) {
  $has-base: mat.theme-has($theme, base);
  $has-color: mat.theme-has($theme, color);
  $has-typography: mat.theme-has($theme, typography);
  $has-density: mat.theme-has($theme, density);
  $theme-type: mat.get-theme-type($theme);

  anon-file-manager {
    .card { @include mat.elevation(2); }

    header.header {
      background-color: mat.get-theme-color($theme, surface-variant);
      mat-icon { color: mat.get-theme-color($theme, on-surface-variant); }
      //background-color: map.get($background-palette, 'app-bar');
      //mat-icon { color: map.get($background-palette, 'icon'); }
    }

    header.header.items-selected {
      background-color: mat.get-theme-color($theme, primary);
      mat-icon { color: mat.get-theme-color($theme, secondary); }
      //background-color: mat.get-color-from-palette($primary-palette);
      //color: mat.get-color-from-palette($accent-palette);
    }

    .content {
      background-color: mat.get-theme-color($theme, surface-container);
      //background-color: map.get($background-palette, 'card');
    }

    .table-wrapper {
      border-top-color: mat.get-theme-color($theme, outline-variant);
      border-bottom-color: mat.get-theme-color($theme, outline-variant);
      //border-top-color: map.get($foreground-palette, 'divider');
      //border-bottom-color: map.get($foreground-palette, 'divider');
    }

    table.mat-mdc-table th {
      border-color: mat.get-theme-color($theme, outline-variant);
    }
    //table.mat-mdc-table th { border-color: map.get($foreground-palette, 'divider');

    table.mat-mdc-table tr.mat-mdc-row.selected {
      background-color: mat.get-theme-color($theme, surface-dim);
      //background-color: map.get($background-palette, 'selected-button');
    }

    table.mat-mdc-table tr.mat-mdc-row:hover:not(.selected) {
      background-color: mat.get-theme-color($theme, surface-bright);
      //background-color: map.get($background-palette, 'hover');
    }

    .empty-folder { color: mat.get-theme-color($theme, on-surface); }
    //.empty-folder { color: map.get($background-palette, 'text'); }

    .empty-folder.hovering {
      background-color: mat.get-theme-color($theme, surface-dim);
    }
    //.empty-folder.hovering { background-color: map.get($background-palette, 'hover'); }

    .mat-mdc-table-sticky-border-elem-top,
    .mat-mdc-table-sticky-border-elem-right,
    .mat-mdc-table-sticky-border-elem-bottom,
    .mat-mdc-table-sticky-border-elem-left {
      border-color: mat.get-theme-color($theme, outline-variant);
      //border-color: mat.get-color-from-palette($foreground-palette, 'divider');
    }
  }
}

@mixin typography($theme) {}

@mixin theme($theme) {
  @if mat.theme-has($theme, color) { @include color($theme); }

  @if mat.theme-has($theme, typography) { @include typography($theme); }

  @include componentThemeMixins($theme);
}

